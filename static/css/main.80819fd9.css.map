{"version":3,"file":"static/css/main.80819fd9.css","mappings":"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","sources":["App/Style/Main.css"],"sourcesContent":["/* The `@import` rule in CSS is used to import a style sheet into another style sheet. In this case,\r\nthe `@import` rule is importing the Google Fonts stylesheet for the fonts \"Nunito\" and \"Protest\r\nStrike\" with specific font weights and styles. */\r\n@import url('https://fonts.googleapis.com/css2?family=Nunito:ital,wght@0,200..1000;1,200..1000&family=Protest+Strike&display=swap');\r\n\r\n/* The `@import` rule in CSS is used to import a style sheet into another style sheet. */\r\n@import url('https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css');\r\n\r\n/* The CSS code `*` selector with the properties `margin: 0;`, `padding: 0;`, `box-sizing:\r\nborder-box;`, `font-family: \"Nunito\", sans-serif;`, `font-optical-sizing: auto;`, and `font-style:\r\nnormal;` is setting default styles for all elements on the page. */\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    font-family: \"Nunito\", sans-serif;\r\n    font-optical-sizing: auto;\r\n    font-style: normal;\r\n}\r\n\r\n/* This CSS code for the `body` selector is styling the overall layout and appearance of the webpage.\r\nHere's what each property is doing: */\r\nbody {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    line-height: 1.6;\r\n    margin: 0;\r\n    transition: background 0.5s ease, color 0.3s ease;\r\n}\r\n\r\n/* The CSS code `body.dark-mode { background: linear-gradient(135deg, #333, #666); }` is defining a\r\nspecific styling for the `body` element when it has the class `dark-mode` added to it. */\r\nbody.dark-mode {\r\n    background: linear-gradient(135deg, #333, #666);\r\n}\r\n\r\n/* The above CSS code is targeting the `.clock-container` element within the `body` element with the\r\nclass `dark-mode`. It is setting the background of the `.clock-container` element to a linear\r\ngradient with specific color stops and transparency values. It is also setting the text color of the\r\n`.clock-container` element to a specific semi-transparent white color. This code is likely part of a\r\ndark mode styling for a clock display on a webpage. */\r\nbody.dark-mode .clock-container {\r\n    background: linear-gradient(45deg, rgba(255, 255, 255, 0.1), rgba(77, 75, 75, 0.45));\r\n    color: rgba(255, 255, 255, 0.70);\r\n}\r\n\r\n/* The above CSS code is styling a container element on a webpage. It sets the maximum width of the\r\ncontainer to 800 pixels, centers the container horizontally on the page with a 1% margin on all\r\nsides, and adds 20 pixels of padding inside the container. */\r\n.container {\r\n    max-width: 800px;\r\n    margin: 1% auto;\r\n    padding: 20px;\r\n}\r\n\r\n/* The above code is a CSS code snippet that styles the header element. It sets the text alignment to\r\ncenter, adds a bottom margin of 20 pixels, and positions the header element relative to its normal\r\nposition in the document flow. */\r\nheader {\r\n    text-align: center;\r\n    margin-bottom: 20px;\r\n    position: relative;\r\n}\r\n\r\n/* The above CSS code is styling the `<h1>` element within a `<header>` element. It sets the font\r\nfamily to \"Protest Strike\" with a fallback to a sans-serif font, font weight to 400, font style to\r\nnormal, font size to 3rem, text color to #42a2bf, and margin to 3% on the top and bottom and auto on\r\nthe left and right. */\r\nheader h1 {\r\n    font-family: \"Protest Strike\", sans-serif;\r\n    font-weight: 400;\r\n    font-style: normal;\r\n    font-size: 3rem;\r\n    color: #42a2bf;\r\n    margin: 3% auto 8% auto;\r\n}\r\n\r\n/* The above code is a CSS code snippet targeting the `h1` element within a `header` element in dark\r\nmode. It sets the text color of the `h1` element to `#d0e7ee`, which is a light blue color. */\r\nbody.dark-mode header h1 {\r\n    color: #d0e7ee;\r\n}\r\n\r\n/* The above CSS code is styling the <main> element. It is using flexbox properties to create a column\r\nlayout where the child elements are stacked vertically. The `display: flex;` property makes the main\r\nelement a flex container, `flex-direction: column;` sets the direction of the main axis to be\r\nvertical, and `align-items: center;` centers the child elements along the cross axis (vertically in\r\nthis case). */\r\nmain {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n}\r\n\r\n/* The above CSS code is styling a `section` element. It sets the width to 100% but with a maximum\r\nwidth of 600px. It adds margin of 10px on the top and bottom, padding of 15px on all sides, a white\r\nbackground color, border radius of 8px for rounded corners, and a box shadow for a subtle shadow\r\neffect. */\r\nsection {\r\n    width: 100%;\r\n    max-width: 600px;\r\n    margin: 10px 0;\r\n    padding: 15px;\r\n    background-color: #fff;\r\n    border-radius: 8px;\r\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n/* The above CSS code is targeting all input and button elements within a section element and applying\r\na margin of 10px on the top and bottom, and auto on the left and right. This will center the input\r\nand button elements within the section element with equal spacing around them. */\r\nsection input,\r\nsection button {\r\n    margin: 10px auto;\r\n}\r\n\r\n/* The above code is setting the width of all buttons inside a section element to be 46% of the width\r\nof their container. */\r\nsection button {\r\n    width: 46%;\r\n}\r\n\r\n/* The above CSS code is targeting the last button element within a section element and applying a\r\nstyle rule to float it to the right. */\r\nsection button:last-child {\r\n    float: right;\r\n}\r\n\r\n/* The above code is a CSS code snippet that targets an element with the ID \"inputConvertionID\" and\r\nsets the text alignment to the right. This means that any text content within the element with that\r\nspecific ID will be aligned to the right within the element. */\r\n#inputConvertionID {\r\n    text-align: right;\r\n}\r\n\r\n/* The above CSS code is styling a class called \".line-box\". It is setting the border color to\r\ntransparent for the top and left sides, and setting the border color to #cccccc for the bottom side\r\nwith a thickness of 1px. It is also setting the border radius to 0, which means the corners of the\r\nelement will be square. The use of \"!important\" is to give these styles the highest priority and\r\noverride any other conflicting styles. */\r\n.line-box {\r\n    border: transparent solid 1px !important;\r\n    border-bottom: #cccccc solid 1px !important;\r\n    border-radius: 0 !important;\r\n}\r\n\r\n/* The above code is a CSS rule targeting an element with the class \"line-box\" that is disabled. It\r\nsets the background color of the element to transparent, using the !important keyword to ensure that\r\nthis style takes precedence over any other conflicting styles. */\r\n.line-box:disabled {\r\n    background-color: transparent !important;\r\n}\r\n\r\n/* The above CSS code is defining a transition effect for the `.calc-method` class. This transition\r\neffect will change the background color over a duration of 0.5 seconds with an ease timing function,\r\nand it will also change the text color over a duration of 0.3 seconds with an ease timing function.\r\nThis will create a smooth visual transition when the background or text color of elements with the\r\n`.calc-method` class are changed. */\r\n.calc-method {\r\n    transition: background 0.5s ease, color 0.3s ease;\r\n}\r\n\r\n/* The above CSS code is targeting elements with the class \"calc-method\" when they are either focused\r\nor hovered over. It applies a box shadow with a light blue color and a slight blur effect, as well\r\nas changes the bottom border color to a darker blue shade. The use of \"!important\" ensures that the\r\nborder color change takes precedence over any other conflicting styles. */\r\n.calc-method:focus,\r\n.calc-method:hover {\r\n    box-shadow: rgba(101, 175, 255, 0.19) -1px 8px 8px;\r\n    border-bottom-color: rgba(101, 175, 255, 0.38) !important;\r\n}\r\n\r\n/* The above CSS code is styling a button element. It sets the padding to 10px on the top and bottom,\r\nand 20px on the left and right. It removes the border around the button using `border: none`, and\r\ngives it a border radius of 5px to make the corners rounded. The cursor is set to pointer to\r\nindicate interactivity, and there is a transition effect on the background color that lasts for 0.3\r\nseconds. */\r\nbutton {\r\n    padding: 10px 20px;\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s;\r\n}\r\n\r\n/* The above CSS code is styling a notification element with the ID \"notification\". It sets the\r\nposition to fixed at the bottom right corner of the screen with a background color of orange\r\n(rgba(242, 110, 30, 0.9)), white text color, padding of 0, border radius of 5px, and a transform\r\nproperty to move the element 20px down. It also includes a transition effect for opacity and\r\ntransform properties with a duration of 0.5s and easing function of ease. */\r\n#notification {\r\n    position: fixed;\r\n    bottom: 20px;\r\n    right: 20px;\r\n    background-color: rgba(242, 110, 30, 0.9);\r\n    color: white;\r\n    padding: 0;\r\n    border-radius: 5px;\r\n    transform: translateY(20px);\r\n    transition: opacity 0.5s ease, transform 0.5s ease;\r\n}\r\n\r\n/* The above code is a CSS code snippet defining a class named \"danger\". This class sets the margin of\r\nelements with this class to 10px on the top and bottom, and 20px on the left and right. */\r\n.danger {\r\n    margin: 10px 20px;\r\n}\r\n\r\n/* The above CSS code is defining a class called `.danger-info`. This class sets the background color\r\nto a semi-transparent red color with an opacity of 0.18 using the `rgba()` function. It also sets\r\nthe border color to a semi-transparent red color with an opacity of 0.38 and a solid border style of\r\n1px width. The `!important` keyword is used to give these styles higher priority and override any\r\nother conflicting styles. */\r\n.danger-info {\r\n    background-color: rgba(255, 0, 0, 0.18) !important;\r\n    border: rgba(255, 0, 0, 0.38) solid 1px !important;\r\n}\r\n\r\n/* The above CSS code is styling a close button element with the class \"close-btn\". It sets the font\r\nfamily to \"Protest Strike\" with a fallback to sans-serif, makes the text bold, positions the button\r\nabsolutely at the top right corner of its container, sets the cursor to a pointer, defines the text\r\ncolor as #e10000, background color as #ffeada, and gives the button a circular shape with\r\nborder-radius. The button has a width and height of 14pt, text is centered within the button, and\r\npadding is added around the text. The line height and font */\r\n.close-btn {\r\n    font-family: \"Protest Strike\", sans-serif;\r\n    font-weight: bold;\r\n    position: absolute;\r\n    top: 12%;\r\n    right: 2%;\r\n    cursor: pointer;\r\n    color: #e10000;\r\n    background-color: #ffeada;\r\n    border-radius: 50%;\r\n    width: 14pt;\r\n    height: 14pt;\r\n    text-align: center;\r\n    padding: 1%;\r\n    line-height: 0.38em;\r\n    font-size: 1.2rem;\r\n}\r\n\r\n/* The above CSS code is styling the `#copy` element and any anchor `<a>` elements within it. It sets\r\nthe text alignment to right, uses the \"Protest Strike\" font family with specified properties, sets\r\nthe font size, color, margin, and text shadow for the text within the elements. The width of the\r\nelements is also set to 78%. */\r\n#copy,\r\n#copy>a {\r\n    text-align: right;\r\n    font-family: \"Protest Strike\", sans-serif;\r\n    font-weight: 400;\r\n    font-style: normal;\r\n    font-size: 0.8rem;\r\n    color: rgba(49, 119, 113, 0.84);\r\n    margin: 5% auto 2% auto;\r\n    text-shadow: rgba(66, 162, 191, 0.38) 0px 0px 2px;\r\n    width: 78%;\r\n}\r\n\r\n\r\n/* The above CSS code is targeting specific elements within the dark-mode styling of a webpage's header\r\nand copy section. It sets the color of the text to a semi-transparent light blue (rgba(208, 231,\r\n238, 0.61)) and removes any text shadow by setting it to transparent (rgba(19, 53, 50, 0.38) 0px 0px\r\n0px). This styling is applied to elements with the specified classes and IDs when the webpage is in\r\ndark mode. */\r\nbody.dark-mode header .clock-container,\r\nbody.dark-mode header .label,\r\nbody.dark-mode header .toggle-container,\r\nbody.dark-mode #copy,\r\nbody.dark-mode #copy>a {\r\n    color: rgba(208, 231, 238, 0.61);\r\n    text-shadow: rgba(19, 53, 50, 0.38) 0px 0px 0px;\r\n}\r\n\r\n/* The above CSS code is targeting disabled input elements and setting their background color to a\r\nsemi-transparent light blue color (rgb(96, 139, 149) with an opacity of 0.09). The `!important`\r\nkeyword is used to give this style rule the highest priority, ensuring that it overrides any other\r\nconflicting styles. */\r\ninput:disabled {\r\n    background-color: rgba(96, 139, 149, 0.09) !important;\r\n}\r\n\r\n/* The above CSS code is styling the labels and input elements within an element with the ID\r\n\"conv-box\". It is setting a margin of 0 on the top and bottom, and 0.5% on the left and right for\r\nboth the labels and input elements. */\r\n#conv-box label,\r\n#conv-box input {\r\n    margin: 0 0.5%;\r\n}\r\n\r\n/* The above code is a CSS code snippet that styles an element with the class \"input\". It sets the font\r\nweight to bold and transforms the text to capitalize. */\r\n.input {\r\n    font-weight: bold;\r\n    text-transform: capitalize;\r\n}\r\n\r\n/* The above code is a CSS code snippet defining a class called \"hide\" with the property \"display:\r\nnone;\". This class is used to hide elements on a webpage by setting their display property to none,\r\neffectively making them invisible and not taking up any space on the page. */\r\n.hide {\r\n    display: none !important;\r\n}\r\n\r\n/* The above code is a CSS code snippet that defines a class called \"show\" with the property \"display\"\r\nset to \"block\". This class can be applied to HTML elements to make them visible on the webpage by\r\nsetting their display property to block. */\r\n.show {\r\n    display: block;\r\n}\r\n\r\n/* The above code is a CSS code snippet defining a class \".s-25\" with a width of 25% and using the\r\n!important rule to give it higher specificity. This class can be applied to HTML elements to set\r\ntheir width to 25% of their parent container's width. */\r\n.s-25 {\r\n    width: 25% !important;\r\n}\r\n\r\n/* The above code is a CSS code snippet defining a class \".s-50\" with a width of 50%. The \"!important\"\r\ndeclaration is used to give this style rule higher priority over other conflicting style rules. This\r\nclass can be applied to HTML elements to set their width to 50%. */\r\n.s-50 {\r\n    width: 50% !important;\r\n}\r\n\r\n/* The above CSS code is targeting an element with the class \"s-75\" and setting its width to 73% with\r\nthe !important rule to give it higher specificity. It also adds a margin of 1% to the left of the\r\nelement. */\r\n.s-75 {\r\n    width: 73% !important;\r\n    margin-left: 1%;\r\n}\r\n\r\n/* The above CSS code is using a media query to apply specific styles to elements with the classes\r\n`.s-25`, `.s-50`, and `.s-75` when the maximum width of the viewport is 600px or less. */\r\n@media (max-width: 600px) {\r\n    .s-25 {\r\n        width: 72% !important;\r\n    }\r\n\r\n    .s-50 {\r\n        width: 100% !important;\r\n    }\r\n\r\n    .s-75 {\r\n        width: 100% !important;\r\n    }\r\n}\r\n\r\n/* The above code is a CSS media query targeting devices with a maximum width of 508px. Within this\r\nmedia query, it is setting the width of elements with the classes \"s-25\" and \"s-50\" to 100% using\r\nthe !important keyword to ensure this style takes precedence over any other conflicting styles. This\r\nis likely done to ensure that these elements take up the full width of the viewport on smaller\r\ndevices. */\r\n@media (max-width: 508px) {\r\n\r\n    .s-25,\r\n    .s-50 {\r\n        width: 100% !important;\r\n    }\r\n}\r\n\r\n/* The above code is a CSS code snippet defining a class called \"show\". This class sets the opacity to\r\n1 (fully visible) and moves the element vertically by 0 pixels using the transform property. This\r\nclass is likely used to make an element visible and position it at its original vertical position. */\r\n.show {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n}\r\n\r\n/* The above code is defining a CSS style for a dark mode theme. It sets the background color of the\r\nbody to a dark gray (#333) and the text color to a light gray (#f4f4f4) when the \"dark-mode\" class\r\nis applied to the body element. */\r\nbody.dark-mode {\r\n    background-color: #333;\r\n    color: #f4f4f4;\r\n}\r\n\r\n/* The above code is defining a CSS rule that targets the `section` elements within the `body` element\r\nwith the class `dark-mode`. It sets the background color to a dark gray (#444) and the text color to\r\na light gray (#f4f4f4). This rule is specifically for styling elements in dark mode. */\r\nbody.dark-mode section {\r\n    background-color: #444;\r\n    color: #f4f4f4;\r\n}\r\n\r\n/* The above code is defining a CSS rule for buttons within the body element with the class\r\n\"dark-mode\". It sets the background color to #555 (a dark gray) and the text color to #f4f4f4 (a\r\nlight gray). This rule will style buttons specifically within the dark-mode context. */\r\nbody.dark-mode button {\r\n    background-color: #555;\r\n    color: #f4f4f4;\r\n}\r\n\r\n/* The above CSS code is styling the header elements with the classes \"label\" and \"toggle-container\".\r\nIt sets their display to inline-block, width to 20% of the parent element, and positions them\r\nabsolutely at the top right corner of their container. The font family is set to \"Protest Strike\",\r\nfont size to 0.8rem, font weight to light, and color to a semi-transparent teal color. Text\r\nalignment is right, with a text shadow effect applied. Margin is set to 1% on the top and bottom,\r\npadding is 1% on the left and right */\r\nheader .label,\r\nheader .toggle-container {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 1%;\r\n    font-family: \"Protest Strike\", serif;\r\n    font-size: 0.8rem;\r\n    font-weight: light;\r\n    color: rgba(49, 119, 113, 0.84);\r\n    text-align: right;\r\n    text-shadow: rgba(66, 162, 191, 0.38) 0px 0px 2px;\r\n    margin: 1% 0;\r\n    padding: 0 1%;\r\n    line-height: 1.8em;\r\n}\r\n\r\n.toggle>.label.switch-label {\r\n    width: auto;\r\n    text-align: right;\r\n    margin: 1% 5% 1% auto;\r\n}\r\n\r\n/* The above code is defining a CSS class called \"toggle-container\" with the following properties:\r\n- Setting the display property to flex, which allows the container to align its children in a flex\r\nlayout.\r\n- Using align-items property to center the children vertically within the container.\r\n- Using justify-content property to center the children horizontally within the container. */\r\n.toggle-container {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n/* The above CSS code is styling a toggle element. It sets the element's position to relative, width to\r\n50px, height to 25px, background color to #ccc (light gray), border radius to create a rounded\r\nshape, cursor to pointer for hover effect, and adds a transition effect for the background color\r\nchange with a duration of 0.3 seconds. */\r\n.toggle {\r\n    position: relative;\r\n    width: 120px;\r\n    height: 25px;\r\n    background-color: #ccc;\r\n    border-radius: 25px;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s;\r\n}\r\n\r\n/* The above CSS code is creating a circular element that will be displayed before the content of an\r\nelement with the class \"toggle\". The element has a white background color, a border radius of 50% to\r\nmake it circular, and is positioned absolutely within its parent element. The transition property is\r\nused to animate the transform property over a duration of 0.3 seconds, allowing for smooth\r\nanimations when the element changes position or size. */\r\n.toggle::before {\r\n    content: '';\r\n    position: absolute;\r\n    width: 20px;\r\n    height: 20px;\r\n    background-color: white;\r\n    border-radius: 50%;\r\n    top: 2.5px;\r\n    left: 2.5px;\r\n    transition: transform 0.3s;\r\n}\r\n\r\n/* The above code is defining a CSS rule for an element with the class \"toggle\" and \"active\". It sets\r\nthe background color of the element to #4caf50 when it has both classes applied to it. */\r\n.toggle.active {\r\n    background-color: #4caf50;\r\n}\r\n\r\n/* The above CSS code is targeting an element with the class \"toggle\" and \"active\" when it is in an\r\nactive state. It is applying a transformation to move the element 25 pixels to the right along the\r\nX-axis. */\r\n.toggle.active::before {\r\n    transform: translateX(25px);\r\n}\r\n\r\n/* The above CSS code is using a media query to apply styles specifically for screens with a maximum\r\nwidth of 768px. Within this media query, it is targeting elements with the class \"label.input-label\"\r\nand setting their display property to \"none\", effectively hiding them on screens with a width of\r\n768px or less. It is also styling elements with the class \"toggle\", setting their width to 42px and\r\nheight to 17px. Additionally, it is styling the pseudo-element \"::before\" of elements with the class\r\n\"toggle\", setting its width to 10px and height to */\r\n@media (max-width: 768px) {\r\n    .label.input-label {\r\n        display: none;\r\n    }\r\n\r\n    .toggle {\r\n        width: 42px;\r\n        height: 17px;\r\n    }\r\n\r\n    .toggle::before {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n}\r\n\r\n/* The above code is defining a CSS rule for an element with the class \"toggle\" and \"active\". It sets\r\nthe background color of the element to #4caf50 when it has both classes applied to it. */\r\n.toggle.active {\r\n    background-color: #4caf50;\r\n}\r\n\r\n/* The above CSS code is targeting an element with the class \"toggle\" and the class \"active\", and\r\napplying a transformation that moves the element 25 pixels to the right along the X-axis. The\r\n`::before` pseudo-element is used to insert content before the content of the selected element. */\r\n.toggle.active::before {\r\n    transform: translateX(25px);\r\n}\r\n\r\n/* The above code is a CSS media query targeting devices with a maximum width of 768px. Within this\r\nmedia query, it is setting the maximum width of `<section>` elements to 90% and the width of\r\n`<button>` elements to 100% to ensure they are responsive and fit well on smaller screens. */\r\n@media (max-width : 768px) {\r\n    section {\r\n        max-width: 90%;\r\n    }\r\n\r\n    button {\r\n        width: 100%;\r\n    }\r\n}\r\n\r\n/* The above code is defining CSS custom properties using the `:root` pseudo-class. It is setting two\r\ncustom properties: `--marker-color-light` with a value of `#b8daff` and `--marker-color-dark` with a\r\nvalue of `#66b3ff`. These custom properties can be used throughout the CSS code to maintain\r\nconsistency and easily update colors in the future. */\r\n:root {\r\n    --marker-color-light: #b8daff;\r\n    --marker-color-dark: #66b3ff;\r\n}\r\n\r\n/* The above CSS code is targeting the `summary` element and setting its position to relative. It is\r\nalso moving the element to the left by 2.8% of its containing element's width. */\r\nsummary {\r\n    position: relative;\r\n    left: -2.8%;\r\n}\r\n\r\n/* The above code is a CSS code snippet that targets the `summary` element and applies a hover effect\r\nto it. When the `summary` element is hovered over, the cursor will change to a pointer, indicating\r\nthat it is clickable. */\r\nsummary:hover {\r\n    cursor: pointer;\r\n}\r\n\r\n/* The above code is a CSS rule targeting `<strong>` elements that are direct children of `<summary>`\r\nelements. It sets the margin of the `<strong>` elements to 0 on the top, right, and bottom, and 3px\r\non the left. */\r\nsummary>strong {\r\n    margin: 0 0 0 3px;\r\n}\r\n\r\n/* The above CSS code is styling the marker for the `<summary>` element. It sets the marker content to\r\na right-pointing triangle symbol ('▶'), changes the color using a custom CSS variable\r\n`--marker-color-light`, sets the font size to 1.2em, and adds a margin to the right of the marker. */\r\nsummary::marker {\r\n    content: '▶';\r\n    color: var(--marker-color-light);\r\n    font-size: 1.2em;\r\n    margin-right: 5px;\r\n}\r\n\r\n/* The above code is targeting the marker color of a summary element within the body of a webpage in\r\ndark mode. It is setting the color of the marker to a custom property (--marker-color-dark) defined\r\nelsewhere in the CSS. */\r\nbody.dark-mode summary::marker {\r\n    color: var(--marker-color-dark);\r\n}\r\n\r\n/* The above CSS code is targeting the marker pseudo-element of a summary element when it is being\r\nhovered over. It sets the color of the marker to #0056b3 (a shade of blue) when the summary element\r\nis being hovered. */\r\nsummary:hover::marker {\r\n    color: #0056b3;\r\n}\r\n\r\n/* The above code is targeting the marker (list item marker) that appears when a summary element is\r\nhovered over in dark mode. It changes the color of the marker to #004494 when the summary element is\r\nhovered over. */\r\nbody.dark-mode summary:hover::marker {\r\n    color: #004494;\r\n}\r\n\r\n.button {\r\n    padding: 10px 20px;\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s, transform 0.2s;\r\n    font-size: 1em;\r\n    font-weight: bold;\r\n}\r\n\r\n.button:disabled {\r\n    cursor: not-allowed;\r\n    opacity: 0.6;\r\n}\r\n\r\nbody:not(.dark-mode) .button:disabled {\r\n    background-color: #007bff;\r\n    color: rgba(255, 255, 255, 0.5);\r\n    border: 1px solid #0056b3;\r\n}\r\n\r\nbody.dark-mode .button:disabled {\r\n    background-color: #495057;\r\n    color: rgba(248, 249, 250, 0.5);\r\n    border: 1px solid #343a40;\r\n}\r\n\r\nbody:not(.dark-mode) .button {\r\n    background-color: #007bff;\r\n    color: white;\r\n}\r\n\r\nbody:not(.dark-mode) .button:hover {\r\n    background-color: #0056b3;\r\n}\r\n\r\nbody.dark-mode .button {\r\n    background-color: #495057;\r\n    color: #f8f9fa;\r\n}\r\n\r\nbody.dark-mode .button:hover {\r\n    background-color: #343a40;\r\n}\r\n\r\n.input,\r\n.calc-method {\r\n    width: 100%;\r\n    padding: 10px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 5px;\r\n    font-size: 1em;\r\n    transition: border-color 0.3s, background-color 0.3s;\r\n}\r\n\r\nbody:not(.dark-mode) .input,\r\nbody:not(.dark-mode) .calc-method {\r\n    background-color: white;\r\n    color: #333;\r\n}\r\n\r\nbody.dark-mode .input,\r\nbody.dark-mode .calc-method {\r\n    background-color: #444;\r\n    color: #f8f9fa;\r\n    border: 1px solid #666;\r\n}\r\n\r\nselect:hover {\r\n    cursor: pointer;\r\n}\r\n\r\n.input:focus,\r\n.calc-method:focus {\r\n    outline: none;\r\n    border-color: #007bff;\r\n}\r\n\r\nbody.dark-mode .input:focus,\r\nbody.dark-mode .calc-method:focus {\r\n    border-color: #66afe9;\r\n}\r\n\r\n#info-box {\r\n    border-radius: 10px;\r\n    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);\r\n    display: inline-table;\r\n    width: 100%;\r\n    margin-top: 20px;\r\n    transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n}\r\n\r\n#info-box h3,\r\n#info-box details {\r\n    margin: 20px;\r\n}\r\n\r\n#info-box p.info {\r\n    margin: 20px !important;\r\n}\r\n\r\n#info-box p {\r\n    margin: 20px auto;\r\n}\r\n\r\nbody:not(.dark-mode) #info-box {\r\n    background: linear-gradient(135deg, #007bff 0%, #6c757d 100%);\r\n    color: white;\r\n}\r\n\r\nbody.dark-mode #info-box {\r\n    background: linear-gradient(135deg, #343a40 0%, #495057 100%);\r\n    color: #f8f9fa;\r\n}\r\n\r\n#info-box:hover {\r\n    transform: translateY(-5px);\r\n    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n#info-title {\r\n    font-size: 1.5em;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.info {\r\n    font-size: 1em;\r\n    line-height: 1.5;\r\n}\r\n\r\n#info-notes {\r\n    margin-top: 15px;\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n    padding: 10px 30px;\r\n    border-radius: 5px;\r\n}\r\n\r\nbody.dark-mode #info-notes {\r\n    background-color: rgba(255, 255, 255, 0.2);\r\n}\r\n\r\ncode {\r\n    font-family: 'Courier New', Courier, monospace;\r\n    background-color: rgba(200, 200, 200, 0.2);\r\n    color: #c7254e;\r\n    margin: 10px auto 5px auto;\r\n    padding: 0.8% 1%;\r\n    border-radius: 3px;\r\n}\r\n\r\ncode.inline {\r\n    background-color: rgba(0, 0, 0, 0.1);\r\n    color: #d19a66;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n    code {\r\n        display: block;\r\n        width: 100%;\r\n        padding: 10px;\r\n        background-color: #f6f8fa;\r\n        border-radius: 5px;\r\n        overflow-x: auto;\r\n    }\r\n}\r\n\r\nbody.dark-mode code {\r\n    background-color: rgba(50, 50, 50, 0.7);\r\n    color: #61afef;\r\n}\r\n\r\nbody.dark-mode pre {\r\n    background-color: #21252b;\r\n    color: #abb2bf;\r\n    border: 1px solid #444;\r\n}\r\n\r\nfooter h3,\r\nfooter p,\r\nfooter strong,\r\nfooter code {\r\n    line-height: 3rem;\r\n}\r\n\r\n.clock-container {\r\n    text-align: center;\r\n    font-family: \"Protest Strike\", serif;\r\n    font-size: 0.88rem;\r\n    font-weight: lighter;\r\n    border-radius: 4px;\r\n    background: linear-gradient(0deg, #4a90e2, #50e3c2);\r\n    color: transparent;\r\n    -webkit-background-clip: text;\r\n    background-clip: text;\r\n    animation: gradient 3s ease infinite;\r\n    text-align: left;\r\n    padding: 1% 2%;\r\n}\r\n\r\n@keyframes gradient {\r\n    0% {\r\n        background-position: 0% 50%;\r\n    }\r\n\r\n    100% {\r\n        background-position: 100% 50%;\r\n    }\r\n}\r\n\r\n.floating {\r\n    display: inline-block;\r\n    animation: float 3s ease-in-out infinite;\r\n}\r\n\r\n@keyframes float {\r\n    0% {\r\n        transform: translateY(0px);\r\n    }\r\n\r\n    50% {\r\n        transform: translateY(-10px);\r\n    }\r\n\r\n    100% {\r\n        transform: translateY(0px);\r\n    }\r\n}"],"names":[],"sourceRoot":""}